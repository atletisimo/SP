#include <iostream>
using namespace std;

int main() {
    int n = 3, m = 4;
    int a[3][4] = {
        {1,  2, -1,  4},
        {-2, 3,  4, -1},
        {5, -3,  2,  2}
    };

    int maxSum = INT_MIN;  // –ù–∞—ò–≥–æ–ª–µ–º–∞ —Å—É–º–∞ –¥–æ—Å–µ–≥–∞
    // –ü–æ—á–Ω—É–≤–∞–º–µ –¥–∞ –≥–∏ –∑–µ–º–∞–º–µ —Å–∏—Ç–µ –º–æ–∂–Ω–∏ –ø–æ–¥–º–∞—Ç—Ä–∏—Ü–∏ –ø–æ —Ä–µ–¥–æ–≤–∏
    for(int top = 0; top < n; top++) {
        int temp[100] = {0};  // ‚ö†Ô∏è –û–¥–Ω–æ–≤–æ –≥–æ —Ä–µ—Å–µ—Ç–∏—Ä–∞–º–µ temp –Ω–∞ 0 –ø—Ä–∏ —Å–µ–∫–æ—ò top
        // –û–≤–∞ –µ –∫–ª—É—á–Ω–æ –∑–∞ –ø—Ä–∞–≤–∏–ª–Ω–æ —Å–æ–±–∏—Ä–∞—ö–µ –Ω–∞ –∫–æ–ª–æ–Ω–∏ –ø–æ–¥—Ä–µ–¥ –ø–æ –ø–æ–¥—Ä–µ–¥

        for(int bottom = top; bottom < n; bottom++) {
            // –°–æ–±–∏—Ä–∞—ò –ø–æ –∫–æ–ª–æ–Ω–∏ –≤—Ä–µ–¥–Ω–æ—Å—Ç–∏ –æ–¥ —Ä–µ–¥–æ–≤–∏—Ç–µ —Ç–æ–ø..bottom –≤–æ temp
            for(int j = 0; j < m; j++) {
                temp[j] += a[bottom][j];
            }

            // –°–µ–≥–∞ –≤–æ temp –∏–º–∞–º–µ –∑–±–∏—Ä –ø–æ –∫–æ–ª–æ–Ω–∏ –∑–∞ —Ä–µ–¥–æ–≤–∏ –æ–¥ top –¥–æ bottom
            // –°–ª–µ–¥–Ω–æ, –≥–æ –Ω–∞–æ—ì–∞–º–µ –Ω–∞—ò–≥–æ–ª–µ–º–∏–æ—Ç –∫–æ–Ω—Ç–∏–Ω—É–∏—Ä–∞–Ω –ø–æ–¥–Ω–∏–∑ –≤–æ temp (Kadane)
            int currSum = 0;
            int bestSum = INT_MIN;
            for(int j = 0; j < m; j++) {
                currSum += temp[j];
                if(currSum > bestSum) bestSum = currSum;
                if(currSum < 0) currSum = 0;  // –ê–∫–æ –µ –Ω–µ–≥–∞—Ç–∏–≤–µ–Ω, —Ä–µ—Å–µ—Ç–∏—Ä–∞—ò

                // üåü –ù–∞ –ø—Ä–∏–º–µ—Ä currSum –µ —Ç–µ–∫–æ–≤–Ω–∞ —Å—É–º–∞ –≤–æ –ø–æ–¥–Ω–∏–∑
                // –ê–∫–æ —Å—Ç–∞–Ω–∞–ª–∞ –ª–æ—à–∞ (–Ω–µ–≥–∞—Ç–∏–≤–Ω–∞), —ò–∞ –ø–æ—á–Ω—É–≤–∞–º–µ –æ–¥ –ø–æ—á–µ—Ç–æ–∫
            }

            // –°–ø–æ—Ä–µ–¥–±–∞—Ç–∞ —Å–æ maxSum
            if(bestSum > maxSum) maxSum = bestSum;
        }
    }

    cout << "–ù–∞—ò–≥–æ–ª–µ–º–∞ —Å—É–º–∞ –Ω–∞ –ø–æ–¥–º–∞—Ç—Ä–∏—Ü–∞ –µ: " << maxSum << endl;

    return 0;
}
