/*
Напиши програма која ќе чита редови од стандарден влез, каде што секој ред е долготраен до 80 карактери и се состои од цифри и букви.
Програмата треба да отпечати секој ред трансформиран на следниот начин: прво сите букви ќе се спојат едни до други (без никакви празнини), а потоа ќе се испечати збирот на сите броеви што се појавуваат во редот.
Броевите можат да имаат повеќе од една цифра (т.е. секвенца од цифри се смета како еден број). Ако нема броеви во редот, треба да се испечати 0 на крајот.
*/
#include <iostream>
#include <cstring>
#include <cctype>
using namespace std;

int main() {
    char line[81]; // максимум 80 карактери + '\0'

    while (cin.getline(line, 81)) {
        int length = strlen(line);
        int sum = 0;
        bool inNumber = false;
        int currentNumber = 0;

        // Прво ќе испечатиме букви, а паралелно ќе го собираеме збирот на бројките
        for (int i = 0; i < length; i++) {
            if (isalpha(line[i])) {
                // Ако е буква, печатиме веднаш
                cout << line[i];
                // Ако претходно сме биле во број, треба да го додадеме во збир
                if (inNumber) {
                    sum += currentNumber;
                    currentNumber = 0;
                    inNumber = false;
                }
            } else if (isdigit(line[i])) {
                // Ако е цифра, ја градиме моменталната бројка
                currentNumber = currentNumber * 10 + (line[i] - '0');
                inNumber = true;
            } else {
                // Ако не е ниту буква ниту цифра (во оваа задача не би требало да има),
                // треба да го завршиме тековниот број ако сме во него
                if (inNumber) {
                    sum += currentNumber;
                    currentNumber = 0;
                    inNumber = false;
                }
            }
        }

        // Ако низата завршува со број, додај го и него во сумата
        if (inNumber) {
            sum += currentNumber;
        }

        cout << sum << endl;
    }

    return 0;
}
/*
sum = 0; — ќе го чуваме збирот на сите броеви во редот.

inNumber = false; — ова е флаг што кажува дали моментално сме во „читање“ на број.

currentNumber = 0; — оваа променлива ја користиме за да го конструираме тековниот број (ако има повеќе цифри по ред).

4. for (int i = 0; i < length; i++)
Ова е циклус што ги проверува сите знаци во тековниот ред еден по еден.
ко знакот е буква (isalpha враќа true ако е буква):

Ја печатиме веднаш.

Ако претходно сме биле во процес на читање број (inNumber == true), значи завршил тој број:

Го додаваме тековниот број (currentNumber) во збирот (sum).

Ја ресетираме currentNumber на 0.

Поставуваме inNumber на false бидејќи повеќе не сме во бро
Ако знакот е цифра (isdigit враќа true ако е цифра 0-9):

Го надградуваме currentNumber со новата цифра.

На пример, ако претходно имаме 12, и новиот знак е '3', тогаш:

currentNumber = 12 * 10 + 3 = 123.

Поставуваме inNumber = true за да означиме дека сме во процес на читање број.


else {
    if (inNumber) {
        sum += currentNumber;
        currentNumber = 0;
        inNumber = false;
    }
}
Иако според условите нема да има такви знаци, овој дел е „безбедносен“.

Ако сме биле во број, го завршуваме и додаваме во збир.

8. По излегување од for циклусот:

if (inNumber) {
    sum += currentNumber;
}
Ако редот завршува со број (на пример 123 на крај), го додаваме тој број во збир.

Ова се случува ако inNumber сè уште е true бидејќи не сме наишле на буква или друг знак што го завршува бројот.

*/
