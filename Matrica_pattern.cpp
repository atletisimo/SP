/*
–ü—Ä–∏–º–µ—Ä:

–ì–æ–ª–µ–º–∞ –º–∞—Ç—Ä–∏—Ü–∞ 5x5

–ú–∞–ª —à–∞–±–ª–æ–Ω 2x2
(–∞–∫–æ pattern –µ –¥–µ–ª –æ–¥ matrix, –∏—Å–ø–µ—á–∞—Ç–∏ YES, –∏–Ω–∞–∫—É NO)
üîç –û–±—ò–∞—Å–Ω—É–≤–∞—ö–µ:
–°–µ –¥–≤–∏–∂–∏–º–µ –Ω–∏–∑ —Å–∏—Ç–µ –º–æ–∂–Ω–∏ –ø–æ–∑–∏—Ü–∏–∏ –∫–∞–¥–µ —à—Ç–æ –º–æ–∂–µ –¥–∞ —Å–µ —Å—Ç–∞–≤–∏ —à–∞–±–ª–æ–Ω–æ—Ç.

–ó–∞ —Å–µ–∫–æ—ò–∞ –ø–æ–∑–∏—Ü–∏—ò–∞ –ø—Ä–æ–≤–µ—Ä—É–≤–∞–º–µ –¥–∞–ª–∏ —Å–∏—Ç–µ –µ–ª–µ–º–µ–Ω—Ç–∏ —Å–æ–≤–ø–∞—ì–∞–∞—Ç.

–ê–∫–æ —Å–µ —Å–æ–≤–ø–∞—ì–∞–∞—Ç ‚Üí YES.



  */




#include<iostream>
using namespace std;

int main() {
    int n, m;
    cin >> n >> m;
    int matrix[100][100];

    // –í—á–∏—Ç—É–≤–∞—ö–µ –Ω–∞ –≥–æ–ª–µ–º–∞—Ç–∞ –º–∞—Ç—Ä–∏—Ü–∞
    for(int i = 0; i < n; i++)
        for(int j = 0; j < m; j++)
            cin >> matrix[i][j];

    int p, q;
    cin >> p >> q;
    int pattern[100][100];

    // –í—á–∏—Ç—É–≤–∞—ö–µ –Ω–∞ —à–∞–±–ª–æ–Ω–æ—Ç
    for(int i = 0; i < p; i++)
        for(int j = 0; j < q; j++)
            cin >> pattern[i][j];

    bool found = false;

    for(int i = 0; i <= n - p; i++) {
        for(int j = 0; j <= m - q; j++) {
            bool match = true;
            for(int x = 0; x < p; x++) {
                for(int y = 0; y < q; y++) {
                    if(matrix[i + x][j + y] != pattern[x][y]) {
                        match = false;
                        break;
                    }
                }
                if(!match) break;
            }
            if(match) {
                found = true;
                break;
            }
        }
        if(found) break;
    }

    if(found)
        cout << "YES" << endl;
    else
        cout << "NO" << endl;

    return 0;
}
